#!/usr/bin/env bash

# Vm management
# start vm management daemons
vm () {
    sudo systemctl restart libvirtd.service
    sudo systemctl restart vsftpd.service
    sudo systemctl restart virtlogd.socket
    sudo mount -o loop ~/iso/CentOS-7-x86_64-Everything-1611.iso  /srv/http/cent7

}

vm_clean () {
    sudo virsh shutdown  ${1} 2>/dev/null 
    sudo virsh destroy  ${1} 2>/dev/null 
    sudo virsh undefine ${1} --remove-all-storage 2>/dev/null
    sudo virsh vol-delete ${1}.qcow2 --pool default 2>/dev/null
    sudo virsh list --all
}

# stop libvirt daemon and vsftpd services
vmstop () {
    sudo systemctl stop libvirtd.service 
    sudo systemctl stop vsftpd.service
}

# Stop all vms running
novm () {
	for i in `sudo virsh list | grep running | awk '{print $2}'`
	do
		sudo virsh shutdown $i
	done                                                                          
}

# List all kvm vms
vmlist () {
	sudo virsh list --all
}

# Volume management

vol_list () {
    sudo virsh vol-list --pool default
}
vol_create (){
    sudo virsh vol-create-as default  ${1}.qcow2  ${2}
}

vol_delete () {
    sudo virsh vol-delete ${1}  --pool default
}

vol_attach () {
    sudo virsh attach-disk --domain ${1} --source /var/lib/libvirt/images/${2}.qcow2  --persistent --target ${3}
    # 3 e.g vdb
}

vol_detach () {
    virsh detach-disk --domain ${1} --persistent --live --target ${2}
}

# Snapshot management

# Create a snaphost or a domaun
snap () {
    while [[ $dom_name == "" || $snap_name == "" ]]; do
        echo  -n "Enter domain name: " 
        read dom_name
        echo  -n "Enter snapshot name: " 
        read snap_name
        echo  -n "Enter Snapshot description: " 
        read desc
    done
    echo ""
    sudo virsh snapshot-create-as --domain "$dom_name" \
        --name "$snap_name" \
        --description "$desc"
 }

 # List available snapshots for a domain
 snaplist () {
    sudo virsh snapshot-list --domain "$1" 
 }

 # Display info about a snapshot
 snapinfo () {
     sudo virsh snapshot-info --domain "$1" "$2"
     # $1 domain name
     # $2 snapshot name
 }

 # Restore a snapshot
 snaprestore () {
     sudo virsh shutdown --domain "$1"
     sudo virsh snapshot-revert --domain "$1"  --snapshotname "$2" --running
 }

 # Delete a snapshot
 snapdelete () {
    sudo  virsh snapshot-delete --domain "$1" --snapshotname "$2"
}

# Start CentOS 7 server
server () {
    sudo virsh start server 2>/dev/null
    sleep 30 
    TERM=xterm
    ssh root@server 2>/dev/null
}

# VM installer script
installer() {
    local ISO_ DIR="/home/josepy/iso"
    echo -en "Enter vm name: "
    read VM_NAME
    echo -en "Enter memory size: "
    read MEM_SIZE
    echo -en "Enter no of vcpus: "
    read VCPUS
    echo -en "Enter OS type: "
    read OS_TYPE
    echo -en "Enter virtual disk size : "
    read DISK_SIZE
    echo -en "Enter OS Variant e.g (rhel7,ubuntu16.04,debianjessie,wink12): "
    read OS_VARIANT
    echo -en "Enter Graphics type (none,vnc): "
    read GRAPHICS_TYPE
    echo -en "Specify ISO name (rhel7,cent7,deb8,ubuntu16,sles): "
    read ISO_NAME
    case $ISO_NAME in 
        rhel7)
           ISO_FILE="/home/josepy/iso/rhel-server-7.3-x86_64-dvd.iso"
           ;;
        cent7)
           ISO_FILE="/home/josepy/iso/CentOS-7-x86_64-Minimal-1611.iso"
           ;; 
        deb8)
           ISO_FILE="/home/josepy/iso/debian-8.6.0-amd64-CD-1.iso"
           ;; 
        ubuntu16)
           ISO_FILE="/home/josepy/iso/ubuntu-16.04.1-server-amd64.iso"
           ;; 
        sles)
           ISO_FILE="/home/josepy/iso/SLE-12-SP2-Server-DVD-x86_64-GM-DVD1.iso"
           ;; 
   esac

sudo virt-install \
    --name ${VM_NAME} \
    --memory=${MEM_SIZE} \
    --vcpus=${VCPUS} \
    --os-type ${OS_TYPE} \
    --location ${ISO_FILE} \
    --disk size=${DISK_SIZE}  \
    --network bridge=virbr0 --network bridge=docker0 \
    --graphics=${GRAPHICS_TYPE} \
    --hvm \
    --os-variant=${OS_VARIANT}
    #--console pty,target_type=serial \
    #--extra-args 'console=ttyS0,115200n8 serial' \

# List os variants: virt-install --os-variant list, common are:
# rhel7,win2k8,win2k12,win7,opensuse12,ubuntu16.04
# --initrd-inject=/root/ks.cfg --extra-args "ks=file:/ks.cfg"
# --network bridge=br-ex --network bridge=br-ctlplane 
#Live snapsho
# virsh snapshot-create-as --domain undercloud --disk-only --atomic --quiesce
# Take a copy of the (now read-only) QCOW backing file
# rsync --sparse -avh --progress /var/lib/libvirt/images/undercloud.qcow2 1.qcow2
# Merge the QCOW overlay file into the backing file and switch the undercloud VM back to using the original file:
# virsh blockcommit undercloud vda --active --verbose --pivot
}

cent_installer() {
    echo -en "Enter vm name: "
    read VM_NAME
    local MEM_SIZE=1024
    local VCPUS=1
    local OS_TYPE="linux"
    echo -en "Enter virtual disk size : "
    read DISK_SIZE
    local OS_VARIANT="rhel7"
    echo -en "Enter Graphics type (none,vnc): "
    read GRAPHICS_TYPE
    local ISO_FILE="$HOME/iso/CentOS-7-x86_64-Everything-1611.iso"

sudo virt-install \
    --name ${VM_NAME} \
    --memory=${MEM_SIZE} \
    --vcpus=${VCPUS} \
    --os-type ${OS_TYPE} \
    --location ${ISO_FILE} \
    --disk size=${DISK_SIZE}  \
    --network bridge=virbr0 --network bridge=docker0 \
    --graphics=${GRAPHICS_TYPE} \
    --os-variant=${OS_VARIANT} \
    --extra-args="ks=http://192.168.122.1/ks.cfg console=tty0 console=ttyS0,115200n8" 
}
