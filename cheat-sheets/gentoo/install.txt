- Create a partition 
# parted -a optimal /dev/sda
> -a optimal : Tell parted to use optimal partition alignment
> Alignment means that partitions are started on well-known boundaries within the disk, ensuring that operations on the disk from the operating system level (retrieve pages from the disk) use the least amount of internal disk operations.

# mklabel gpt
# unit MB

# mkpart primary 1 3 > Make 2MB GRUB2 boot loader partition
# name 1 grub
# set 1 bios_grub on

# mkpart primary 3 512 > Boot partition
# name 2 boot
# set 2 boot on

# mkpart primary 512 4000 > Swap partition
# name 3 swap

# mkpart primary 4001 30000 > root partition
# name 4 root

# mkpart primary 30001 -1 > Home partition
# name 5 home

Turn on bootable flag on partition using fdisk
> Type a to toggle, select 2
> p : to test/check

Make fileystem
# mkfs.ext2 /dev/sda2
# mkswap /dev/sda3
# swapon /dev/sda3
# mkfs.ext4 /dev/sda4
# mkfs.ext4 /dev/sda5

Mount
:# mkdir -p /mnt/{home,boot}
# mount /dev/sda4 /mnt
# mount /dev/sda2 /mnt/boot
# mount /dev/sda5 /mnt/home

Configure Networking
# net-setup eth0
# pppoe-setup > For ADSL users
# pppoe-start 
# ping -c3 8.8.8.8

For proxy:
# export http_proxy="http://proxy.gentoo.org:8080" > http proxy
# export ftp_proxy="ftp://proxy.gentoo.org:8080" > FTP proxy
# export RSYNC_PROXY="proxy.gentoo.org:8080" > Rsync proxy

- If proxy requires username and password, use:
# http://username:password@proxy.gentoo.org:8080

- To find network kernel driver to load manually,

# ls /lib/modules/`uname -r`/kernel/drivers/net
# modprobe driver-name

# ifconfig eth0
- The available network interface names on the system can be listed through the /sys file system:
# ls /sys/class/net

- For dhcp
# dhcpd eth0
# iwconfig > Wireless

Manual ip
# ifconfig eth0 ${IP_ADDR} broadcast ${BROADCAST} netmask ${NETMASK} up
# route add default gw ${GATEWAY}
# echo "nameserver 8.8.8.8" >> /etc/resolv.conf

Set date
# date
# date MMDDhhmmYYYY

Downloading stage tarball
# cd /mnt
#  wget http://distfiles.gentoo.org/releases/amd64/autobuilds/20160923/systemd/stage3-amd64-systemd-20160923.tar.bz2

or
# wget -c http://distfiles.gentoo.org/releases/amd64/autobuilds/20160922/stage3-amd64-20160922.tar.bz2
# tar -xcjf stage3* 

# nano /etc/portage/make.conf

CFLAGS="-march=native -O2 -pipe"
CXXFLAGS="${CFLAGS}"

MAKEOPTS="-j5" > No of parallel compilations to occur when installing a package
- A good choice is the number of CPUs (or CPU cores) in the system plus one, but this guideline isn't always perfect.

Chrooting
- Select fastest mirrors close to you
 # mirrorselect -i -o >> /mnt/gentoo/etc/portage/make.conf

Configuring the main Gentoo repository
# mkdir /mnt/gentoo/etc/portage/repos.conf
# cp /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf

Copy DNS info
# cp -L /etc/resolv.conf /mnt/gentoo/etc/
- -L option to the cp command. This ensures that, if /etc/resolv.conf is a symbolic link, that the link's target file is copied instead of the symbolic link itself

Mounting the necessary filesystems
- The /proc/ location will be mounted on /mnt/gentoo/proc/
- /sys and /dev are bind-mounted

# mount -t proc proc /mnt/gentoo/proc
# mount --rbind /sys /mnt/gentoo/sys
# mount --make-rslave /mnt/gentoo/sys
# mount --rbind /dev /mnt/gentoo/dev
# mount --make-rslave /mnt/gentoo/dev

Entering the new environment



